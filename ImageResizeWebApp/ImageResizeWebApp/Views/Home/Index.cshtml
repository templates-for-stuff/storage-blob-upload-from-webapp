@{
    ViewData["Title"] = "Home Page";
}

<!-- Client side libs required  -->
<link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" crossorigin="anonymous">

<style>
    html {
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    main {
        margin: 20px;
    }

    .dropzone {
        border: 3px dashed #00a1f1;
        background: #F0F8FF;
        margin: 25px;
        border-radius: 5px;
        max-width: 400px;
    }

    .dropzone .dz-message {
        font-weight: 350;
    }

    .dropzone .dz-message .note {
        font-family: sans-serif;
        font-size: 18px;
        font-weight: 200;
        display: block;
        margin-top 1.5rem;
    }
</style>


<main>
    <div class="box header">
        <h1><span class="fa fa-user-circle-o"></span> <span id="page-title">AB Report Repository</span></h1>
    </div>
    
    <div class="box content">
        <hr>
        <h2>Upload Reports</h2>
        <div>
            <form action="/api/images/upload"
                 class="dropzone needsclick dz-clickable" 
                 id="image-upload"
                 method="post"
                 enctype="multipart/form">
                
                <div class="dz-message needsclick">
                    <span class="note needsclick">
                        Drop files here or click to upload.
                    </span>
                </div>
            </form>
        </div>
        <h2>Previously Uploaded Reports</h2>
            <!-- <p><span id="gallery-note">Gallery refreshes from storage container image links every 5 seconds.</span></p> -->
            <div id="stored-reports">
                
                
        
        </div>

       
        </div>
    </div>
</main>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/js/blueimp-gallery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>

<script>
    
    var old_store;
    var old_files;

    // Grab links for images from backend api
    function fetchImageLinks() {
        // Fetch images
        $.get("api/Images/thumbnails", function(fetchedImageLinks) {
            console.log(fetchedImageLinks)

            // Check if anything is in there
            if ( _.isEmpty(fetchedImageLinks) ){
                console.log('empty fetched')
                // do nothing  
            } else {
                // Check if we have a gallery initialized
                if ( false) {
                    //
                } else {
                  // fetchedImageLinks.length == old_store
                    if ( false ) {
                        console.log('images arr are equal')
                        // do nothing
                    } else {
                        console.log('images arr are not equal')
                        // update gallery with new image urls. Only compare actual url without SAS token query string
                        var newImageLinks = fetchedImageLinks;
                        old_store = fetchedImageLinks.length;
                        
                        console.log('differene is: ')
                        console.log(newImageLinks)
                        // Only add new images
                        
                        var myStringArray = newImageLinks.filter(x => !old_files.includes(x));
                        var arrayLength = myStringArray.length;
                        old_files = newImageLinks;
                        
                        for (var i = 0; i < arrayLength; i++) {
                            
                        console.log(myStringArray[i]);
                        var a = document.createElement('a');
                        
                        var linkText = document.createTextNode(myStringArray[i]);
                        var fields = myStringArray[i].split('/');
                        a.appendChild(linkText);
                        a.title = fields[1];
                        a.href = myStringArray[i];
                        a.target = '_blank';
                        
                        document.getElementById("stored-reports").appendChild(a);
                        document.getElementById("stored-reports").innerHTML += "<br>";
                       
                        }
                    }
                }       
            }     
        });
    }

    // Start first interval
    fetchImageLinks()
    
    setInterval(function() {
        fetchImageLinks()
    }, 5000) 

    /* Dropzone */
    // "imageUpload" is the camelized version of the HTML element's ID
    Dropzone.options.imageUpload = {
        maxFilesize: 500,
        acceptedFiles: ".pdf,.html,.json,.csv,.tsv",
        paramName: "files", // The name that will be used to transfer the file
        dictDefaultMessage: "Drop files here or Click to Upload",
        addRemoveLinks: true, // Allows for cancellation of file upload and remove thumbnail
        init: function() {
            myDropzone = this;
            myDropzone.on("success", function(file, response) {
                console.log("Success");
                myDropzone.removeFile(file);
            });                    
        }
    };
</script>
